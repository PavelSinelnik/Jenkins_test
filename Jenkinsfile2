#!/usr/bin/env groovy
pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    agent none
    parameters {
        string(name: 'BRANCH', defaultValue: 'master', description: 'Choose git branch')
    }
    stages {
        stage('Run tests') {
            parallel {
                stage("Run on windows") {                  
                    agent { label "Android" }
                    steps {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '${BRANCH}']],
                            userRemoteConfigs: [[url: 'https://github.com/PavelSinelnik/Jenkins_test.git']]
                        ])
                        bat '''
                        set /P Variable=<%cd%\\name.txt
                        echo hello %Variable%
                        PAUSE                       
                        '''
                    }
                } //stage after parallel
                stage("Run on Mac"){
                    agent { label "iOSVirt" }
                    steps {
                        checkout([
                            $class: 'GitSCM',
                            branches: [[name: '${BRANCH}']],
                            userRemoteConfigs: [[url: 'https://github.com/PavelSinelnik/Jenkins_test.git']]
                        ])
                        sh '''name="$(cat name.txt)"
                        echo "hello $name"
                        '''
                    }
                } 
            }
        }
    }
    post{
        success {
            emailext (
                    subject: "[Jenkins][SUCCESS] '${JOB_NAME} [${BUILD_NUMBER}]'",
                    body: '''
                    <p>Build '${JOB_NAME} [${BUILD_NUMBER}]': was successfull</p>
                    <p>URL &QUOT;<a href='${BUILD_URL}'>${JOB_NAME} [${BUILD_NUMBER}]</a>&QUOT;</p>
                    ''',
                    to: 'pavel.sinelnik@regula.by',
                    recipientProviders: [requestor()],
                    mimeType: 'text/html'
                )
        }
        failure {
            emailext (
                    subject: "[Jenkins][FAILED] '${JOB_NAME} [${BUILD_NUMBER}]'",
                    body: '''
                    <p>Build '${JOB_NAME} [${BUILD_NUMBER}]': failed</p>
                    <p>URL &QUOT;<a href='${BUILD_URL}'>${JOB_NAME} [${BUILD_NUMBER}]</a>&QUOT;</p>
                    ''',
                    to: 'pavel.sinelnik@regula.by',
                    recipientProviders: [requestor()],
                    mimeType: 'text/html'
                )
        }
        aborted {
            emailext (
                    subject: "[Jenkins][ABORTED] '${JOB_NAME} [${BUILD_NUMBER}]'",
                    body: '''
                    <p>Build '${JOB_NAME} [${BUILD_NUMBER}]': was aborted</p>
                    <p>URL &QUOT;<a href='${BUILD_URL}'>${JOB_NAME} [${BUILD_NUMBER}]</a>&QUOT;</p>
                    ''',
                    to: 'pavel.sinelnik@regula.by',
                    recipientProviders: [requestor()],
                    mimeType: 'text/html'
                )
        }
        
    } 
}